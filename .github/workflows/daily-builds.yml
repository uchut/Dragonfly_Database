name: daily-builds

on:
  # TODO: Remove this. This is for testing
  schedule:
    - cron: '0 6 * * *' # run at 6 AM UTC
  workflow_dispatch:

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    name: Build ${{ matrix.name }}
    strategy:
      matrix:
        include:
          # Build with these flags
          - name: generic
            container: alpine-dev
            flags: "-DMARCH_OPT=-march=x86-64"
          - name: fedora
            container: fedora:30

    timeout-minutes: 45

    container:
      image: ghcr.io/romange/${{ matrix.container }}
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install dependencies
        run: |
          cmake --version
          mkdir -p ${{github.workspace}}/build

      - name: Configure & Build
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        working-directory: ${{github.workspace}}/build
        run: |
          cmake .. -DCMAKE_BUILD_TYPE=Debug -GNinja -DCMAKE_CXX_COMPILER_LAUNCHER=ccache ${{ matrix.flags }}
          ninja src/all
      - name: Test
        working-directory: ${{github.workspace}}/build
        run: |
            ctest -V -L DFLY
